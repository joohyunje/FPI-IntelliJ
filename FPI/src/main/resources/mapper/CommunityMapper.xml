<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.fpi.mapper.board.CommunityMapper">


    <!-- 커뮤니티 list가져옴, 동적쿼리-->
    <select id="communitySelectAll" resultType="CommunityDetailDTO">
        SELECT *
        FROM (
            SELECT ROWNUM AS RN, COMMUNITY.*
            FROM (
                SELECT
                    C.COMMUNITY_ID,
                    C.SUBJECT,
                    C.COMMUNITY_TITLE,
                    C.COMMUNITY_CONTENT,
                    C.AUTHOR,
                    C.COMMUNITY_REGISTER_DATE,
                    C.COMMUNITY_UPDATE_DATE,
                    U.USER_ID,
                    C.COMMUNITY_THUMBNAIL,
                    C.SHOW_CONTENT,
                    C.views,
                    (SELECT COUNT(*) FROM TBL_LIKE L WHERE L.COMMUNITY_ID = C.COMMUNITY_ID) AS LIKECOUNT,
                    (SELECT COUNT(*) FROM TBL_COMMENT co WHERE  co.COMMUNITY_ID = C.COMMUNITY_ID) AS commentCount
                FROM
                    TBL_COMMUNITY c
                        JOIN
                            TBL_USER U ON U.USER_ID = C.USER_ID
                <where>
                        <choose>
                            <when test="subject != null and subject == '자유게시판'">
                                C.SUBJECT = '자유게시판' AND
                                (C.COMMUNITY_CONTENT LIKE '%' || #{search} || '%'
                                OR C.COMMUNITY_TITLE LIKE '%' || #{search} || '%')
                            </when>
                            <when test="subject != null and subject == '전문가팁'">
                                C.SUBJECT = '전문가팁' AND
                                (C.COMMUNITY_CONTENT LIKE '%' || #{search} || '%'
                                OR C.COMMUNITY_TITLE LIKE '%' || #{search} || '%')
                            </when>
                            <otherwise>
                                (C.COMMUNITY_CONTENT LIKE '%' || #{search} || '%'
                                OR C.COMMUNITY_TITLE LIKE '%' || #{search} || '%')
                            </otherwise>
                        </choose>
                </where>
                ORDER BY
                    <choose>
                        <when test="'date'.equals(sort)">
                            C.COMMUNITY_UPDATE_DATE DESC,C.COMMUNITY_ID DESC
                        </when>
                        <when test="'view'.equals(sort)">
                            C.views DESC,C.COMMUNITY_ID DESC
                        </when>
                        <when test="'like'.equals(sort)">
                            LIKECOUNT DESC,C.COMMUNITY_ID DESC
                        </when>
                        <when test="'comment'.equals(sort)">
                            commentCount DESC,C.COMMUNITY_ID DESC
                        </when>
                    </choose>
                ) COMMUNITY
            WHERE ROWNUM &lt;= #{endRow})
        WHERE RN &gt; #{startRow}
    </select>

<!--    페이징을 위한 커뮤니티글 count-->
    <select id="countCommunity">
        SELECT COUNT(*)
        FROM tbl_Community c
        <where>
            <choose>
                <when test="subject != null and subject == '자유게시판'">
                    C.SUBJECT = '자유게시판' AND
                    (C.COMMUNITY_CONTENT LIKE '%' || #{search} || '%'
                    OR C.COMMUNITY_TITLE LIKE '%' || #{search} || '%')
                </when>
                <when test="subject != null and subject == '전문가팁'">
                    C.SUBJECT = '전문가팁' AND
                    (C.COMMUNITY_CONTENT LIKE '%' || #{search} || '%'
                    OR C.COMMUNITY_TITLE LIKE '%' || #{search} || '%')
                </when>
                <otherwise>
                    (C.COMMUNITY_CONTENT LIKE '%' || #{search} || '%'
                    OR C.COMMUNITY_TITLE LIKE '%' || #{search} || '%')
                </otherwise>
            </choose>
        </where>
    </select>




    <!--  community 게시글 상세보기  -->
    <select id="selectCommunityDetail" resultType="CommunityDetailDTO">
        SELECT
            C.COMMUNITY_ID,
            C.SUBJECT,
            C.COMMUNITY_TITLE,
            C.COMMUNITY_CONTENT,
            C.AUTHOR,
            C.Community_REGISTER_DATE,
            C.COMMUNITY_UPDATE_DATE,
            U.USER_ID,
            c.views,
            (SELECT COUNT(*) FROM TBL_LIKE L  WHERE L.COMMUNITY_ID = C.COMMUNITY_ID) AS LIKE_COUNT,
            (SELECT COUNT(*) FROM TBL_COMMENT co WHERE  co.COMMUNITY_ID = C.COMMUNITY_ID) AS commentCount
        FROM
            TBL_COMMUNITY C JOIN TBL_USER U ON U.USER_ID = C.USER_ID
        where C.COMMUNITY_ID = #{communityId}
    </select>

    <!--    insert에 사용    -->
    <select id="getSeq" resultType="long">
        select SEQ_COMMUNITY.nextval from dual
    </select>
    <!--    작성  -->
    <!--    세션에 저장된 값을 가져와서 author에 넣어줄것임-->
    <insert id="saveCommunity">
        insert into TBL_COMMUNITY
        values(#{communityId}, #{subject}, #{communityTitle},#{communityContent}, sysdate, sysdate, #{userId}, #{communityThumbnail},#{showContent},0,#{author})
    </insert>

    <!--    게시글 수정-->
    <update id="editCommunity">
        update tbl_community
        set SUBJECT=#{subject},COMMUNITY_TITLE =#{communityTitle}, COMMUNITY_CONTENT =#{communityContent},COMMUNITY_UPDATE_DATE = sysdate ,COMMUNITY_THUMBNAIL=#{communityThumbnail},SHOW_CONTENT=#{showContent}
        where community_id = #{communityId}
    </update>

    <!--    게시글 삭제-->
    <delete id="deleteCommunity">
        delete from TBL_COMMUNITY
        where COMMUNITY_ID = #{communityId}
    </delete>

    <!--    해당 게시글 좋아요 한적있는지 조회-->
    <select id="selectLike">
        select LIKE_ID
        from TBL_LIKE
        where USER_ID=#{userId} and COMMUNITY_ID=#{communityId}
    </select>

    <!--                        좋아요 테이블                                  -->
    <insert id="insertLike">
        insert into TBL_LIKE
        values (#{likeId},#{userId},#{communityId})
    </insert>
    <select id="getLikeSeq" resultType="long">
        select SEQ_LIKE.nextval from dual
    </select>
    <delete id="deleteLike">
        delete from TBL_LIKE
        where LIKE_ID=#{likeId}
    </delete>


    <!--    조회수-->
    <update id="plusViews">
    update TBL_COMMUNITY
    set views = views + 1
    where COMMUNITY_ID = #{communityId}
    </update>

    <update id="minusViews">
        update TBL_COMMUNITY
        set views = views - 1
        where COMMUNITY_ID = #{communityId}
    </update>

<!--    디테일에서 바로 반영위해-->
    <select id="countViews">
        select VIEWS
        from TBL_COMMUNITY
        where COMMUNITY_ID =#{communityId}
    </select>


</mapper>