<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.fpi.mapper.pro.ProMapper">
    <!--    전문가 마이페이지의 상세보기-->
    <select id="detailPro">
        SELECT p1.*, c.category_name
        FROM (SELECT p.pro_id,
                     p.pro_name,
                     p.phone_number,
                     p.pro_img,
                     p.emp_cnt,
                     u.email,
                     u.user_cash,
                     p.pro_star_rate,
                     l.region,
                     l.city,
                     cl.category_id,
                     career.award
              FROM tbl_pro p
                       JOIN tbl_location l ON p.location_id = l.location_id
                       JOIN tbl_category_list cl ON p.pro_id = cl.pro_id
                       JOIN tbl_user u ON p.user_id = u.user_id
                       JOIN TBL_CAREERINFO career ON p.PRO_ID = career.PRO_ID) p1
                 JOIN tbl_category c ON p1.category_id = c.category_id
        WHERE p1.pro_id = #{proId}

    </select>


    <!--    고용횟수 가져옴-->
    <select id="empCount" resultType="Long">
        select sum(cnt) as proEmpCount
        from (select count(*) as cnt
              from TBL_USER_REQUEST u
                       join TBL_PRO_UPLOAD p
                            on u.PRO_UPLOAD_ID = p.PRO_UPLOAD_ID
              where u.USER_REQUEST_PROGRESS = 'POST'
                and p.PRO_ID = #{proId}

              union all

              select count(*) as cnt
              from TBL_PRO_REQUEST
              where PRO_ID = #{proId}
                and PRO_REQUEST_PROGRESS = 'POST')
    </select>

    <!--    교용횟수 업데이트   -->
    <update id="updateEmpCnt">
        update TBL_PRO
        set EMP_CNT = #{empCnt}
        where PRO_ID = #{proId}
    </update>


    <!--    <select id="starCount">-->
    <!--        select-->
    <!--    </select>-->
    <!--    등록된 자격증 사진을 보여줄때 최근등록순 4개만 보여줌-->
    <!--    <select id="selectCardFile4">-->
    <!--        select infoFile.*-->
    <!--        from (-->
    <!--        select f.*-->
    <!--        from TBL_CARDINFO_FILE f  join TBL_CARDINFO c on c.CARDINFO_ID = f.CARDINFO_ID-->
    <!--        where pro_id=#{proId}-->
    <!--        order by f.CARDINFO_FILE_ID DESC) infoFile-->
    <!--        where ROWNUM &lt; 5-->
    <!--    </select>-->


    <!--    자격증정보 리스트로 가져옴-->
    <select id="selectCard">
        select *
        from TBL_CARDINFO
        where pro_id = #{proId}
    </select>

    <!--수정 폼으로 넘어갈때 가져갈 자료-->
    <select id="selectEditPro">
        select pro.*, l.REGION, l.CITY
        from (select p.PRO_ID,
                     p.PRO_NAME,
                     p.PHONE_NUMBER,
                     p.PRO_IMG,
                     p.LOCATION_ID,
                     u.EMAIL,
                     category.CATEGORY_ID,
                     career.AWARD,
                     career.CAREERINFO_ID
              from tbl_pro p
                       join TBL_CATEGORY_LIST category on p.PRO_ID = category.PRO_ID
                       join TBL_USER u on p.USER_ID = u.USER_ID
                       join TBL_CAREERINFO career on p.PRO_ID = career.PRO_ID) pro
                 join TBL_LOCATION l on l.LOCATION_ID = pro.LOCATION_ID
        where pro.PRO_ID = #{proId}
    </select>

    <!--    조인없이 pro정보만 가져옴-->
    <select id="selectProInfo">
        select *
        from TBL_PRO
        where PRO_ID = #{proId}
    </select>

    <!--    유저에서 전문가 전환이 되기때문에 por_id가져오기 위해서 필요-->
    <select id="selectProId">
        select pro_id
        from tbl_pro
        where user_id = #{userId}
    </select>

    <!--    탈퇴시 폼에서 입력한 이름과 같은지 비교하기 위해서 필요-->
    <select id="selectProName">
        select PRO_NAME
        from tbl_pro
        where PRO_ID = #{proId}
    </select>

    <!--    전문가 탈퇴시 서버에 등록된 자격증 사진 삭제 위해서 필요-->
    <!--    <select id="cardImg">-->
    <!--        select *-->
    <!--        from TBL_CARDINFO_FILE-->
    <!--        where CARDINFO_ID=#{cardInfoId}-->
    <!--    </select>-->

    <!--   editpro에서 프로아이디로 cardInfoId로 조회하면 여러개 나타나서 오류나서 수정함  -->
    <!--    <select id="cardImg">-->
    <!--        select *-->
    <!--        from TBL_CARDINFO_FILE-->
    <!--        where CARDINFO_FILE_ID=#{cardFileId}-->
    <!--    </select>-->

    <select id="cardFileList">
        select *
        from TBL_CARDINFO_FILE
        where PRO_ID = #{proId}
    </select>

    <!--    전문가 탈퇴-->
    <delete id="deletePro">
        delete
        from tbl_pro
        where pro_id = #{proId}
          and pro_name = #{proName}
    </delete>

    <!--    마이페이지 전문가 정보 수정하기-->
    <update id="editPro">
        update tbl_pro
        set PRO_NAME     =#{proName},
            phone_number = #{phoneNumber},
            PRO_IMG=#{proImg},
            location_id=#{locationId}
        where PRO_ID = #{proId}
    </update>
    <update id="editCategory">
        update tbl_category_list
        set category_id = #{categoryId}
        where PRO_ID = #{proId}
    </update>

    <update id="editCardInfo">
        update TBL_CARDINFO
        set CERTI_ORGAN = #{certiOrgan},
            CERTI_NUM=#{certiNum}
        where CARDINFO_ID = #{cardInfoId}
    </update>
    <update id="editCareerInfo">
        update TBL_CAREERINFO
        set AWARD=#{award}
        where CAREERINFO_ID = #{careerInfoId}
    </update>
    <!--    전문가가 올리 견적 목록   -->
    <select id="selectProUploadList" resultType="ProUploadListDTO">
        SELECT *
        FROM (
        SELECT ROWNUM AS RN, UPLOAD.*
        FROM (
        select TPU.PRO_UPLOAD_ID, TPU.PRO_ID, tpu.PRO_UPLOAD_TITLE, tpu.PRO_UPLOAD_DATE, tp.PRO_STAR_RATE, tp.PRO_NAME,
        ts.SERVICE_NAME, tp.PRO_IMG
        from TBL_PRO_UPLOAD TPU
        inner join TBL_PRO TP
        on TPU.PRO_ID = TP.PRO_ID
        inner join TBL_SERVICE TS
        on tpu.SERVICE_ID = ts.SERVICE_ID
        inner join TBL_CATEGORY tg
        on tg.CATEGORY_ID = ts.CATEGORY_ID
        <where>
            <if test="'title'.equals(searchSubject)">
                <choose>
                    <when test="searchType == ''">
                        and tpu.PRO_UPLOAD_TITLE LIKE '%' || #{search} || '%'
                    </when>
                    <when test='"1".equals(searchType)'>
                        and tpu.PRO_UPLOAD_TITLE LIKE '%' || #{search} || '%' AND TG.CATEGORY_ID = 1
                    </when>
                    <when test='"2".equals(searchType)'>
                        and tpu.PRO_UPLOAD_TITLE LIKE '%' || #{search} || '%' AND TG.CATEGORY_ID = 2
                    </when>
                    <when test='"3".equals(searchType)'>
                        and tpu.PRO_UPLOAD_TITLE LIKE '%' || #{search} || '%' AND TG.CATEGORY_ID = 3
                    </when>
                    <when test='"4".equals(searchType)'>
                        and tpu.PRO_UPLOAD_TITLE LIKE '%' || #{search} || '%' AND TG.CATEGORY_ID = 4
                    </when>
                    <when test='"5".equals(searchType)'>
                        and tpu.PRO_UPLOAD_TITLE LIKE '%' || #{search} || '%' AND TG.CATEGORY_ID = 5
                    </when>
                </choose>
            </if>
            <if test="'name'.equals(searchSubject)">
                <choose>
                    <when test="searchType == ''">
                        and tp.PRO_NAME LIKE '%' || #{search} || '%'
                    </when>
                    <when test='"1".equals(searchType)'>
                        and tp.PRO_NAME LIKE '%' || #{search} || '%' AND TG.CATEGORY_ID = 1
                    </when>
                    <when test='"2".equals(searchType)'>
                        and tp.PRO_NAME LIKE '%' || #{search} || '%' AND TG.CATEGORY_ID = 2
                    </when>
                    <when test='"3".equals(searchType)'>
                        and tp.PRO_NAME LIKE '%' || #{search} || '%' AND TG.CATEGORY_ID = 3
                    </when>
                    <when test='"4".equals(searchType)'>
                        and tp.PRO_NAME LIKE '%' || #{search} || '%' AND TG.CATEGORY_ID = 4
                    </when>
                    <when test='"5".equals(searchType)'>
                        and tp.PRO_NAME LIKE '%' || #{search} || '%' AND TG.CATEGORY_ID = 5
                    </when>
                </choose>
            </if>
        </where>
        ORDER BY
        PRO_UPLOAD_DATE DESC
        ) UPLOAD
        WHERE ROWNUM &lt;= #{endRow}
        )
        WHERE rn &gt; #{startRow}

    </select>

    <!--    전문가가 올린 견적 갯수  -->
    <select id="countProUpload">
        select count(*)
        from TBL_PRO_UPLOAD TPU
        inner join TBL_SERVICE TS
        on TPU.SERVICE_ID = ts.SERVICE_ID
        inner join TBL_CATEGORY tg
        on tg.CATEGORY_ID = ts.CATEGORY_ID
        join tbl_pro tp on TPU.PRO_ID = tp.PRO_ID
        <where>
            <if test="'title'.equals(searchSubject)">
                <choose>
                    <when test="searchType == ''">
                        and tpu.PRO_UPLOAD_TITLE LIKE '%' || #{search} || '%'
                    </when>
                    <when test='"1".equals(searchType)'>
                        and tpu.PRO_UPLOAD_TITLE LIKE '%' || #{search} || '%' AND TG.CATEGORY_ID = 1
                    </when>
                    <when test='"2".equals(searchType)'>
                        and tpu.PRO_UPLOAD_TITLE LIKE '%' || #{search} || '%' AND TG.CATEGORY_ID = 2
                    </when>
                    <when test='"3".equals(searchType)'>
                        and tpu.PRO_UPLOAD_TITLE LIKE '%' || #{search} || '%' AND TG.CATEGORY_ID = 3
                    </when>
                    <when test='"4".equals(searchType)'>
                        and tpu.PRO_UPLOAD_TITLE LIKE '%' || #{search} || '%' AND TG.CATEGORY_ID = 4
                    </when>
                    <when test='"5".equals(searchType)'>
                        and tpu.PRO_UPLOAD_TITLE LIKE '%' || #{search} || '%' AND TG.CATEGORY_ID = 5
                    </when>
                </choose>
            </if>
            <if test="'name'.equals(searchSubject)">
                <choose>
                    <when test="searchType == ''">
                        and tp.PRO_NAME LIKE '%' || #{search} || '%'
                    </when>
                    <when test='"1".equals(searchType)'>
                        and tp.PRO_NAME LIKE '%' || #{search} || '%' AND TG.CATEGORY_ID = 1
                    </when>
                    <when test='"2".equals(searchType)'>
                        and tp.PRO_NAME LIKE '%' || #{search} || '%' AND TG.CATEGORY_ID = 2
                    </when>
                    <when test='"3".equals(searchType)'>
                        and tp.PRO_NAME LIKE '%' || #{search} || '%' AND TG.CATEGORY_ID = 3
                    </when>
                    <when test='"4".equals(searchType)'>
                        and tp.PRO_NAME LIKE '%' || #{search} || '%' AND TG.CATEGORY_ID = 4
                    </when>
                    <when test='"5".equals(searchType)'>
                        and tp.PRO_NAME LIKE '%' || #{search} || '%' AND TG.CATEGORY_ID = 5
                    </when>
                </choose>
            </if>
        </where>
    </select>

    <!-- 견적으로  전문가 경력 가져오기-->
    <select id="selectProCareerByUp" resultType="ProCareerInfoListDTO">
        select tpc.PRO_ID, tpc.AWARD, tpc.CAREERINFO_ID
        from TBL_CAREERINFO TPC
                 inner join TBL_PRO_UPLOAD TPU
                            on TPU.PRO_ID = TPC.PRO_ID
        where TPU.PRO_UPLOAD_ID = #{proUploadId}
    </select>

    <!--    전문가가 올리 견적 상세보기  -->
    <select id="selectProUploadDetail" resultType="ProUploadDetailDTO">
        SELECT TPU.PRO_UPLOAD_ID
             , TPU.PRO_UPLOAD_DATE
             , TC.CATEGORY_NAME
             , TS.SERVICE_NAME
             , TL.REGION
             , TL.CITY
             , TPU.PRO_UPLOAD_CONTENT
             , TP.PRO_STAR_RATE
             , TPU.PRO_UPLOAD_ADDRESS
             , TPU.PRO_UPLOAD_PAY_RANGE
             , TP.PRO_NAME
             , TP.PRO_ID
             , TPU.PRO_UPLOAD_TITLE
             , TPU.PRO_UPLOAD_PAY
             , TP.EMP_CNT
        FROM TBL_PRO_UPLOAD TPU
                 INNER JOIN TBL_SERVICE ts
                            ON TPU.SERVICE_ID = TS.SERVICE_ID
                 INNER JOIN TBL_CATEGORY tc
                            ON TS.CATEGORY_ID = TC.CATEGORY_ID
                 INNER JOIN TBL_PRO TP
                            ON TP.PRO_ID = TPU.PRO_ID
                 INNER JOIN TBL_LOCATION tl
                            ON TP.LOCATION_ID = TL.LOCATION_ID
        WHERE TPU.PRO_UPLOAD_ID = #{proUploadId}
    </select>


    <!--    전문가 견적 올리기-->
    <!--    전문가 견적 올리 다음 시퀀스 가져오기-->
    <select id="getUploadSeq" resultType="long">
        select SEQ_UPLOAD.nextval
        from dual
    </select>

    <!--    견적 작성 쿼리문-->
    <insert id="saveProUpload">
        insert into TBL_PRO_UPLOAD
        values (#{proUploadId}, #{proUploadTitle}, #{proUploadContent}, #{proUploadPay},
                #{proUploadPayRange}, sysdate, #{proUploadAddress}, #{proId}, #{serviceId})
    </insert>

    <!--    전문가 위치 가져오기-->
    <select id="selectProLocation" resultType="ProLocationDTO">
        select REGION, CITY, PRO_NAME
        from tbl_pro
                 inner join TBL_LOCATION
                            on tbl_pro.LOCATION_ID = TBL_LOCATION.LOCATION_ID
        where TBL_PRO.PRO_ID = #{proId}
    </select>

    <!--    회원 찾기를 통 보낸 요청-->
    <insert id="proRequest">
        insert into TBL_PRO_REQUEST
        values (SEQ_REQUEST.nextval, #{proRequestPay}, #{proRequestContent},
                sysdate, 'PRE', #{proId}, #{userUploadId}, 0, 0)
    </insert>

    <!--    회원 올린 견적에 대해서 내가 보낸 요청이 있는 없는지 확인-->
    <select id="checkProRequest" resultType="long">
        select count(*)
        from TBL_USER_UPLOAD TUU
                 inner join TBL_PRO_REQUEST TPR
                            on TUU.USER_UPLOAD_ID = TPR.USER_UPLOAD_ID
                 inner join TBL_PRO TP
                            on TPR.PRO_ID = TP.PRO_ID
        where TUU.USER_UPLOAD_ID = #{userUploadId}
          and TPR.PRO_ID = #{proId}
    </select>

    <!--    전문가가 회원에 대해 리뷰 작성하기  -->
    <insert id="proWriteUserReview">
        insert into TBL_USER_REVIEW
        values (SEQ_REVIEW.nextval, #{userReviewTitle}, #{userReviewContent}, #{userReviewRate}, 100, sysdate,
                #{userId}, #{proId})
    </insert>

    <!--    수락하기 눌렀을때-->

    <update id="updateProAccept">
        update TBL_USER_REQUEST
        set USER_REQUEST_PROGRESS = 'ING'
        where USER_REQUEST_ID = #{userRequestId}
    </update>

    <!--    작업 완료 눌렀을때-->
    <update id="updateProComplete">
        update TBL_USER_REQUEST
        set USER_REQUEST_PROGRESS = 'POST'
        where USER_REQUEST_ID = #{userRequestId}
    </update>

    <!--   회원이 보낸 요청에서 리뷰 작성하기 눌렀을때 업데이트   -->
    <update id="updateUserRequestUserReview">
        update TBL_USER_REQUEST
        set CHECK_PRO_REVIEW = 1
        where USER_REQUEST_ID = #{userRequestId}
    </update>

    <!--   내가 보낸 요청에서 리뷰 작성하기 눌렀을때 업데이트   -->
    <update id="updateProRequestUserReview">
        update TBL_PRO_REQUEST
        set CHECK_PRO_REVIEW = 1
        where PRO_REQUEST_ID = #{proRequestId}
    </update>

    <!--    전문가가 유저 신고하기-->
    <insert id="proAccuseUser">
        insert into TBL_USER_ACCUSE
        values (SEQ_ACCUSE.nextval, #{userAccuseContent}, #{userId}, #{proId})
    </insert>


    <!--    유저가 전문가 신고 할때 리퀘스트 아이디를 통해 프로 아이디 가져오기-->
    <select id="selectUserIdByUserRequestId" resultType="String">
        select USER_ID
        from TBL_USER_REQUEST
        where USER_REQUEST_ID = #{userRequestId}
    </select>


    <!--        전문가 별점 가져오기 -->
    <select id="selectProRate" resultType="Long">
        select round(avg(PRO_REVIEW_RATE), 0)
        from TBL_PRO_REVIEW
        where PRO_ID = #{proId}
    </select>

    <!--    전문가 별점 넣어주기 -->
    <update id="updateProRate">
        update TBL_PRO
        set PRO_STAR_RATE = #{proStarRate}
        where PRO_ID = #{proId}

    </update>

    <!--    회원 별점 가져오기 -->
    <select id="selectUserRate" resultType="Long">
        select round(avg(USER_REVIEW_RATE), 0)
        from TBL_USER_REVIEW
        where USER_ID = #{userId}
    </select>

    <!--    회원 별점 넣어주기 -->
    <update id="updateUserRate">
        update TBL_USER
        set USER_STAR_RATE = #{userStarRate}
        where USER_ID = #{userId}

    </update>

    <!--    유저가 올린 견적를 통해 아이디 가져오기 -->
    <select id="selectUserIdByProRequestId" resultType="String">
        select USER_ID
        from TBL_PRO_REQUEST
                 inner join TBL_USER_UPLOAD
                            on TBL_PRO_REQUEST.USER_UPLOAD_ID = TBL_USER_UPLOAD.USER_UPLOAD_ID
        where TBL_PRO_REQUEST.PRO_REQUEST_ID = #{proRequestId}
    </select>


    <!--    프로가 올린 서비스를 통해 아이디 가져오기 -->
    <select id="selectProIdByProUploadId" resultType="Long">
        select PRO_ID
        from TBL_PRO_UPLOAD
        where PRO_UPLOAD_ID = #{proUploadId}
    </select>


    <!--    마이페이지에서 클릭으로 자격증정보 삭제-->
    <delete id="clickDeleteCard">
        delete
        from TBL_CARDINFO
        where CARDINFO_ID = #{cardIndfoId}
    </delete>

    <!--    전문가의 리뷰 갯수 가져오기 -->
    <select id="selectProReviewCnt" resultType="Long">
        select count(*)
        from TBL_PRO_REVIEW
        where PRO_ID = #{proId}
    </select>

    <select id="proUploadList">
        SELECT *
        FROM (SELECT ROWNUM AS RN, upload.*
              FROM (SELECT TUU.*,
                           ts.SERVICE_NAME,
                           UUF.pro_UPLOAD_FILE_ROUTE,
                           ROW_NUMBER() OVER (PARTITION BY uuf.pro_UPLOAD_ID ORDER BY uuf.pro_UPLOAD_FILE_ROUTE) AS route
                    FROM TBL_pro_UPLOAD TUU
                             INNER JOIN TBL_pro TU
                                        ON TUU.pro_ID = TU.pro_ID
                             INNER JOIN TBL_SERVICE TS
                                        ON TUU.SERVICE_ID = TS.SERVICE_ID
                             INNER JOIN TBL_CATEGORY TG
                                        ON TG.CATEGORY_ID = TS.CATEGORY_ID
                             LEFT JOIN TBL_pro_UPLOAD_FILE UUF
                                       ON TUU.pro_UPLOAD_ID = UUF.pro_UPLOAD_ID
                    WHERE TUU.pro_ID = #{proId}
                    ORDER BY TUU.pro_UPLOAD_ID DESC) upload
              WHERE ROWNUM &lt;= #{endRow}
                AND (route = 1 or PRO_UPLOAD_FILE_ROUTE is null))
        WHERE RN &gt; #{startRow}
    </select>
    <select id="countProUploadList">
        select count(*)
        from TBL_pro_UPLOAD
        where pro_Id = #{proId}
    </select>


</mapper>